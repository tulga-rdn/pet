Failed to load neighbors_convert.so: /home/sodjarga/projects/pet_myfork/pet/src/neighbors_convert.so: undefined symbol: _ZN5torch3jit17parseSchemaOrNameERKSsb
[2024-11-08 17:13:19][INFO] - Initializing PET training...
[2024-11-08 17:13:19][INFO] - Starting training at: 2024-11-08 17:13:19
[2024-11-08 17:13:19][INFO] - Training configuration:
Output directory: results
Training using device: cuda:0
Output dimensionality: 1
Target type: structural
Target aggregation: sum
Random seed: 0
CUDA is deterministic: False
[2024-11-08 17:13:19][INFO] - Convering structures to PyG graphs...
[2024-11-08 17:13:19][INFO] - Pre-processing training data...
[2024-11-08 17:13:19][INFO] - Initializing the model...
Traceback (most recent call last):
  File "/home/sodjarga/miniconda3/envs/cosmo1_re/bin/pet_train", line 8, in <module>
    sys.exit(main())
             ^^^^^^
  File "/home/sodjarga/projects/pet_myfork/pet/src/train_model.py", line 577, in main
    fit_pet(
  File "/home/sodjarga/projects/pet_myfork/pet/src/train_model.py", line 186, in fit_pet
    model = PET(ARCHITECTURAL_HYPERS, 0.0, len(all_species)).to(device)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/sodjarga/miniconda3/envs/cosmo1_re/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1173, in to
    return self._apply(convert)
           ^^^^^^^^^^^^^^^^^^^^
  File "/home/sodjarga/miniconda3/envs/cosmo1_re/lib/python3.12/site-packages/torch/nn/modules/module.py", line 779, in _apply
    module._apply(fn)
  File "/home/sodjarga/miniconda3/envs/cosmo1_re/lib/python3.12/site-packages/torch/nn/modules/module.py", line 804, in _apply
    param_applied = fn(param)
                    ^^^^^^^^^
  File "/home/sodjarga/miniconda3/envs/cosmo1_re/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1159, in convert
    return t.to(
           ^^^^^
RuntimeError: CUDA error: CUDA-capable device(s) is/are busy or unavailable
CUDA kernel errors might be asynchronously reported at some other API call, so the stacktrace below might be incorrect.
For debugging consider passing CUDA_LAUNCH_BLOCKING=1.
Compile with `TORCH_USE_CUDA_DSA` to enable device-side assertions.

